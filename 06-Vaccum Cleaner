class VacuumCleaner:
    def _init_(self, size):
        self.size = size
        self.grid = [[0] * size for _ in range(size)]
        self.position = (0, 0)

    def place_dirt(self, x, y):
        self.grid[x][y] = 1

    def print_grid(self):
        for row in self.grid:
            print(row)

    def move_left(self):
        if self.position[1] > 0:
            self.position = (self.position[0], self.position[1] - 1)
            print("Moved left to", self.position)
        else:
            print("Already at the left edge.")

    def move_right(self):
        if self.position[1] < self.size - 1:
            self.position = (self.position[0], self.position[1] + 1)
            print("Moved right to", self.position)
        else:
            print("Already at the right edge.")

    def move_up(self):
        if self.position[0] > 0:
            self.position = (self.position[0] - 1, self.position[1])
            print("Moved up to", self.position)
        else:
            print("Already at the top edge.")

    def move_down(self):
        if self.position[0] < self.size - 1:
            self.position = (self.position[0] + 1, self.position[1])
            print("Moved down to", self.position)
        else:
            print("Already at the bottom edge.")

    def clean(self):
        x, y = self.position
        if self.grid[x][y] == 1:
            print("Cleaning dirt at", self.position)
            self.grid[x][y] = 0
        else:
            print("No dirt to clean at", self.position)

size = 3
vacuum = VacuumCleaner(size)

vacuum.place_dirt(0, 1)
vacuum.place_dirt(1, 2)
vacuum.place_dirt(2, 0)

print("Initial grid:")
vacuum.print_grid()


while any(1 in row for row in vacuum.grid):
    vacuum.clean()

    
    import random

    move_options = [vacuum.move_left, vacuum.move_right, vacuum.move_up, vacuum.move_down]
    random.choice(move_options)()

    print("Grid after move:")
    vacuum.print_grid()
    print("\n")

print("All cells are clean. MissionÂ accomplished!")
